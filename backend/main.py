#!/usr/bin/env python3

"""
This script integrates with the FastAPI
"""
from fastapi import FastAPI, Depends, HTTPException
from sqlalchemy.orm import Session
from database import SessionLocal
from models import User
from auth import auth_router, get_current_user
from models import Container

app = FastAPI()
app.include_router(auth_router)


# Dependency: Get Database Session
def get_db():
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()

# Get User Profile
@app.get("/api/user-profile")
def get_user_profile(current_user: User = Depends(get_current_user), db: Session = Depends(get_db)):
    user = db.query(User).filter(User.id == current_user.id).first()
    if not user:
        raise HTTPException(status_code=404, detail="User not found")
    return {"username": user.username, "email": user.email}


@app.post("/api/containers")
def generate_container(config: dict):
    dockerfile = f"""
    FROM {config["os"]}
    RUN apt-get update && apt-get install -y {config["software"]}
    """
    return {"dockerfile": dockerfile}


# Get all containers generated by a user
@app.get("/api/user-containers")
def get_user_containers(current_user: User = Depends(get_current_user), db: Session = Depends(get_db)):
    containers = db.query(Container).filter(Container.user_id == current_user.id).all()
    return [{"id": c.id, "name": c.name, "software": c.software, "created_at": c.created_at} for c in containers]
